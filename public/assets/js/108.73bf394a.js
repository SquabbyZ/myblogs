(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{515:function(t,e,s){"use strict";s.r(e);var a=s(4),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"什么是-forever-start-node-服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-forever-start-node-服务"}},[t._v("#")]),t._v(" 什么是 forever start Node 服务")]),t._v(" "),s("p",[s("code",[t._v("forever start Node")]),t._v(" 中的 "),s("code",[t._v("forever")]),t._v(" 是一个后台启动 "),s("code",[t._v("node")]),t._v(" 的依赖包,但是唯一的缺点是你要进入到启动文件的录下才能够执行。")]),t._v(" "),s("h2",{attrs:{id:"为什么要设置-systemctl-服务启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要设置-systemctl-服务启动"}},[t._v("#")]),t._v(" 为什么要设置 "),s("code",[t._v("systemctl")]),t._v(" 服务启动")]),t._v(" "),s("p",[t._v("虽然我们有了 "),s("code",[t._v("forever")]),t._v(" 依赖包，但是每次启动/停止/重启服务的时候，都需要进入到项目服务启动文件的目录下才可以执行，显得很繁琐，而且对于维护来说难度增加，需要找到项目文件才能够去执行命令，因此我们采用这种方法做成全局的效果解决这个问题.")]),t._v(" "),s("h2",{attrs:{id:"我配置的机器以及成功的环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我配置的机器以及成功的环境"}},[t._v("#")]),t._v(" 我配置的机器以及成功的环境")]),t._v(" "),s("ol",[s("li",[t._v("麒麟 4.0 系统")])]),t._v(" "),s("h2",{attrs:{id:"上配置代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上配置代码"}},[t._v("#")]),t._v(" 上配置代码")]),t._v(" "),s("p",[t._v("创建一个 "),s("code",[t._v("demo.service")]),t._v(" 文件配置如下，其中 "),s("code",[t._v("demo")]),t._v(" 是自定义的名称")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[Unit]\n#[Unit]部分主要是对这个服务的说明，内容包括Description和After，Description\n\nDescription=demo #描述\nAfter=network.target remote-fs.target nss-lookup.target\n\n#用于描述服务，After用于描述服务类别\n\n[Service]\nType=forking #是后台运行的形式\nWorkingDirectory=/home/Jack1/demo #工作目录(主要是你启动文件所在的路径)\nExecStart=/usr/bin/forever start app.js #启动命令\nExecReload=/usr/bin/forever restart app.js #重启命令\nExecStop=/usr/bin/forever stop app.js #停止命令\nUser=nobody #执行的用户, 也可以使用数字标记\nGroup=nobody #执行的用户组, 也可以使用数字标记\nPrivateTmp=true #表示给服务分配独立的临时空间\nRemainAfterExit=yes #进程退出以后,服务仍然保持执行\n\n[Install]\n#[Install]部分是服务安装的相关设置，可设置为多用户的\nWantedBy=multi-user.target\n\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("p",[t._v("然后将文件放入到 "),s("code",[t._v("/usr/lib/systemd/system")]),t._v("(Centos) 或者是 "),s("code",[t._v("/lib/systemd/system")]),t._v("(Ubuntu arm64),\n我的是 "),s("code",[t._v("麒麟系统")]),t._v(",我放入的路径是 "),s("code",[t._v("/lib/systemd/system")])]),t._v(" "),s("h3",{attrs:{id:"一般配置完或者修改-service-服务文件需要重载配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一般配置完或者修改-service-服务文件需要重载配置文件"}},[t._v("#")]),t._v(" 一般配置完或者修改 service 服务文件需要重载配置文件")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl daemon-reload\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"启动-重启-停止服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-重启-停止服务"}},[t._v("#")]),t._v(" 启动/重启/停止服务")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl start/restart/stop demo.service\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"查看服务状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看服务状态"}},[t._v("#")]),t._v(" 查看服务状态")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl status demo.servie\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("strong",[t._v("这个命令很关键，因为当你配置完 "),s("code",[t._v("service")]),t._v(" 文件的时候，及时是配置错误，也不会像你起服务的时候直接报错，当你测试发现所配置的服务没有起来的时候，用这个命令会告诉你配置的哪里有问题")])]),t._v(" "),s("h3",{attrs:{id:"设为开机启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设为开机启动"}},[t._v("#")]),t._v(" 设为开机启动")]),t._v(" "),s("p",[t._v("一般的情况下只需要执行下面的命令即可:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl enable demo.service // demo.service 就是你自定义的服务文件的文件名\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("但是，我使用的是麒麟的系统，虽然配置上了，但是重启服务器根本不管用，那就用下面的方法")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vim /etc/rc.local //直接在开机自启的文件里加入 `systemctl start demo.service` 保存退出即可\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"配置文件的区块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件的区块"}},[t._v("#")]),t._v(" 配置文件的区块")]),t._v(" "),s("p",[t._v("[Unit]区块通常是配置文件的第一个区块，用来定义 Unit 的元数据，以及配置与其他 Unit 的关系。它的主要字段如下。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Key")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Description")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("简短描述")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Documentation")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文档地址")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Requires")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("当前 Unit 依赖的其他 Unit，如果它们没有运行，当前 Unit 会启动失败")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Wants")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("与当前 Unit 配合的其他 Unit，如果它们没有运行，当前 Unit 不会启动失败")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("BindsTo")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("与 Requires 类似，它指定的 Unit 如果退出，会导致当前 Unit 停止运行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Before")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之后启动")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("After")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之前启动")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Conflicts")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("这里指定的 Unit 不能与当前 Unit 同时运行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Condition...")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("当前 Unit 运行必须满足的条件，否则不会运行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Environment")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("指定环境变量")])])])]),t._v(" "),s("p",[s("strong",[t._v("Unit 配置文件的完整字段清单，请参考"),s("a",{attrs:{href:"https://www.freedesktop.org/software/systemd/man/systemd.unit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v(".")])]),t._v(" "),s("p",[t._v("欢迎评论留言 😃")])])}),[],!1,null,null,null);e.default=n.exports}}]);