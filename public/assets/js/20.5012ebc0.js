(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{432:function(t,e,v){"use strict";v.r(e);var _=v(4),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"_1-设置固定宽度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-设置固定宽度"}},[t._v("#")]),t._v(" 1.设置固定宽度")]),t._v(" "),v("p",[t._v("如果不设置固定宽度，容器会被文字本身大小给撑开，根本就不会有文本超出容器。")]),t._v(" "),v("h2",{attrs:{id:"_2-overflow"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-overflow"}},[t._v("#")]),t._v(" 2.overflow")]),t._v(" "),v("p",[v("code",[t._v("overflow")]),t._v(" 中文的意思为溢出，常用的属性为")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("visible(看得见的)")]),t._v(" "),v("td",[t._v("默认值。内容不会被修剪，会呈现在元素框之外。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("hidden(隐藏)")]),t._v(" "),v("td",[t._v("内容会被修剪，并且其余内容是不可见的。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("scroll(滚动)")]),t._v(" "),v("td",[t._v("内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("auto(自适应)")]),t._v(" "),v("td",[t._v("如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("inherit(继承)")]),t._v(" "),v("td",[t._v("规定应该从父元素继承 overflow 属性的值。")])])])]),t._v(" "),v("p",[t._v("我们要实现超出部分显示省略号，首先我们先要把超出容器的部分隐藏掉，所以我们这里 "),v("code",[t._v("overflow")]),t._v(" 的值选择为 "),v("code",[t._v("hidden")]),t._v(".")]),t._v(" "),v("h2",{attrs:{id:"_3-text-overflow"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-text-overflow"}},[t._v("#")]),t._v(" 3.text-overflow")]),t._v(" "),v("p",[t._v("上一步，我们使用 "),v("code",[t._v("overflow:hidden")]),t._v("，把超出容器的部分隐藏掉了，但是我们发现，容器的宽高的固定的,底部出现了一行显示不全的文字，笨方法是调整容器的宽高或者 "),v("code",[t._v("line-height")]),t._v(",这时候我们可以使用 "),v("code",[t._v("text-overflow")]),t._v(" 的属性 "),v("code",[t._v("ellipsis")]),t._v(" 属性:")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("clip")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("修剪文本。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("ellipsis")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("显示省略符号来代表被修剪的文本。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("使用给定的字符串来代表被修剪的文本。")])])])]),t._v(" "),v("p",[t._v("我们要显示超出的部分为省略号，所以选择 "),v("code",[t._v("ellipsis")]),t._v(" 属性。")]),t._v(" "),v("h2",{attrs:{id:"_4-white-space"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-white-space"}},[t._v("#")]),t._v(" 4.white-space")]),t._v(" "),v("p",[t._v("当我们设置了上面的属性后，发现根本不生效，没有达到我们想要的那种单行文字超出容器部分用省略号显示的效果，因为这个时候 CSS 不知道要在哪里天津开始进行省略，所以我们还需要配置 "),v("code",[t._v("white-space")]),t._v("(空白，空格，这里指的是空格符) 的值为 "),v("code",[t._v("nowrap")]),t._v("(不换行)")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("normal")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("默认。空白会被浏览器忽略。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("pre")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("空白会被浏览器保留。其行为方式类似 HTML 中的 "),v("code",[t._v("<pre>")]),t._v(" 标签。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("nowrap")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("文本不会换行，文本会在在同一行上继续，直到遇到 "),v("code",[t._v("<br>")]),t._v(" 标签为止。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("pre-wrap")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("保留空白符序列，但是正常地进行换行。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("pre-line")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("合并空白符序列，但是保留换行符。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("inherit")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("规定应该从父元素继承 white-space 属性的值。")])])])]),t._v(" "),v("p",[t._v("当我们设置完 "),v("code",[t._v("white-space:nowrap")]),t._v(" 的时候，就达到了显示的效果，单行文本超出部分用省略号代替。")]),t._v(" "),v("h2",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("CSS 把超出宽度的文本设置为省略号显示的设置为4步:")]),t._v(" "),v("ol",[v("li",[t._v("设置宽度")]),t._v(" "),v("li",[t._v("强制文本在一行显示")]),t._v(" "),v("li",[t._v("隐藏溢出内容")]),t._v(" "),v("li",[t._v("溢出进行省略")])])])}),[],!1,null,null,null);e.default=a.exports}}]);