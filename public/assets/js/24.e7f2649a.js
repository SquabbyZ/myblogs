(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{530:function(v,e,t){"use strict";t.r(e);var _=t(3),s=Object(_.a)({},(function(){var v=this,e=v.$createElement,t=v._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"css-中属性的渲染顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-中属性的渲染顺序"}},[v._v("#")]),v._v(" CSS 中属性的渲染顺序")]),v._v(" "),t("ol",[t("li",[v._v("定位属性: "),t("code",[v._v("position")]),v._v(" "),t("code",[v._v("display")]),v._v(" "),t("code",[v._v("float")]),v._v(" "),t("code",[v._v("left")]),v._v(" "),t("code",[v._v("top")]),v._v(" "),t("code",[v._v("right")]),v._v(" "),t("code",[v._v("bottom")]),v._v(" "),t("code",[v._v("overflow")]),v._v(" "),t("code",[v._v("clear")]),v._v(" "),t("code",[v._v("z-index")]),v._v(";")]),v._v(" "),t("li",[v._v("自身属性: "),t("code",[v._v("width")]),v._v(" "),t("code",[v._v("height")]),v._v(" "),t("code",[v._v("padding")]),v._v(" "),t("code",[v._v("border")]),v._v(" "),t("code",[v._v("margin")]),v._v(" "),t("code",[v._v("background")]),v._v(";")]),v._v(" "),t("li",[v._v("文字样式: "),t("code",[v._v("font-family")]),v._v(" "),t("code",[v._v("font-size")]),v._v(" "),t("code",[v._v("font-style")]),v._v(" "),t("code",[v._v("font-weight")]),v._v(" "),t("code",[v._v("font-varient")]),v._v(" "),t("code",[v._v("color")]),v._v(";")]),v._v(" "),t("li",[v._v("文本属性: "),t("code",[v._v("text-align")]),v._v(" "),t("code",[v._v("vertical-align")]),v._v(" "),t("code",[v._v("text-wrap")]),v._v(" "),t("code",[v._v("text-transform")]),v._v(" "),t("code",[v._v("text-indent")]),v._v(" "),t("code",[v._v("text-decoration")]),v._v(" "),t("code",[v._v("letter-spacing")]),v._v(" "),t("code",[v._v("word-spacing")]),v._v(" "),t("code",[v._v("white-space")]),v._v(" "),t("code",[v._v("text-overflow")]),v._v(";")]),v._v(" "),t("li",[v._v("CSS3 中新增属性: "),t("code",[v._v("content")]),v._v(" "),t("code",[v._v("box-shadow")]),v._v(" "),t("code",[v._v("border-radius")]),v._v(" "),t("code",[v._v("transform")]),v._v(" ...")])]),v._v(" "),t("h2",{attrs:{id:"书写顺序的目的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#书写顺序的目的"}},[v._v("#")]),v._v(" 书写顺序的目的")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("书写的目的")]),v._v(" "),t("p",[v._v("减少浏览器 "),t("code",[v._v("reflow")]),v._v(" (回流),提升浏览器渲染 "),t("code",[v._v("dom")]),v._v(" 的性能。")])]),v._v(" "),t("h2",{attrs:{id:"浏览器渲染流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染流程"}},[v._v("#")]),v._v(" 浏览器渲染流程")]),v._v(" "),t("ol",[t("li",[v._v("解析 "),t("code",[v._v("html")]),v._v(" 构建的 "),t("code",[v._v("dom")]),v._v(" 树，解析 "),t("code",[v._v("css")]),v._v(" 构建的 "),t("code",[v._v("css")]),v._v(" 树:将 "),t("code",[v._v("html")]),v._v(" 解析成树形的数据结构，将 "),t("code",[v._v("css")]),v._v(" 解析成树形的数据结构")]),v._v(" "),t("li",[v._v("构建 "),t("code",[v._v("render")]),v._v(" 树: "),t("code",[v._v("DOM")]),v._v(" 树和 "),t("code",[v._v("CSS")]),v._v(" 树合并之后形成的 "),t("code",[v._v("render")]),v._v(" 树。")]),v._v(" "),t("li",[v._v("布局 "),t("code",[v._v("render")]),v._v(" 树:有了 "),t("code",[v._v("render")]),v._v(" 树,浏览器已经知道那些网页中有那些节点，各个节点的 "),t("code",[v._v("css")]),v._v(" 定义和以及它们的从属关系，从而计算出每个节点在屏幕中的位置")]),v._v(" "),t("li",[v._v("绘制 "),t("code",[v._v("render")]),v._v(" 树:按照计算出来的规则，通过显卡把内容画在屏幕上。")])]),v._v(" "),t("p",[t("code",[v._v("CSS")]),v._v(" 样式解析到显示至浏览器屏幕上就发生在2、3、4步骤中，从此可以得出浏览器并不是一获取到 "),t("code",[v._v("css")]),v._v(" 的样式就立马开始解析，而且根据 "),t("code",[v._v("css")]),v._v(" 样式的书写顺序，然后按照 "),t("code",[v._v("dom")]),v._v(" 树的结构分布 "),t("code",[v._v("render")]),v._v(" 样式,完成构建 "),t("code",[v._v("render")]),v._v(" 树，然后再开始遍历每个树节点的 CSS 样式进行解析，这时的 "),t("code",[v._v("css")]),v._v(" 样式的遍历顺序是按照之前书写的顺序，在解析的过程中，一旦浏览器发现某个元素的定位变化影响了布局，则需要倒回去重新渲染，举个例子:")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("小案例")]),v._v(" "),t("p",[v._v("当我们给一个 "),t("code",[v._v("dom")]),v._v(" 元素设置如下顺序的 "),t("code",[v._v("css")]),v._v(" 样式的时候,先看看顺序\n"),t("code",[v._v("width:100px;")]),t("br"),t("code",[v._v("height:100px;")]),t("br"),t("code",[v._v("background-color:red;")]),t("br"),t("code",[v._v("position:absolute;")])]),v._v(" "),t("p",[v._v("我们可以看到，这个示范 "),t("code",[v._v("DEMO")]),v._v(" 它把自身属性优先有定位属性写入到了样式中，因为浏览器的渲染机制，当浏览器把该元素的 dom 树 位置构建好之后，也开始渲染了它的自身属性。但是"),t("b",{staticStyle:{color:"red"}},[v._v("突然发现")]),v._v("，该元素的样式中还有一个定位属性，如果浏览器是人的话内心肯定五味杂陈，你要这个元素脱离文档流，为什么不在构建 "),t("code",[v._v("render")]),v._v(" 树的时候先和我说一声，我就不用按照普通元素去渲染它，这时候，不得不进行重新渲染，解除该元素在文档流中所占的位置，并且因为它的站位发生变化，其他元素也有可能受到它的影响而重新排位，造成大量的不必要的时间花费在 "),t("code",[v._v("render")]),v._v(" 树的构建上，从而直接影响了 "),t("code",[v._v("render")]),v._v(" 树渲染的时间，积少成多造成极差的用户体验。")])]),v._v(" "),t("h2",{attrs:{id:"扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[v._v("#")]),v._v(" 扩展")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("repaint(重绘)")]),v._v(" ————会影响浏览器渲染性能"),t("br"),v._v("定义： "),t("code",[v._v("改变某个元素的背景色、文字颜色、边框颜色等等不影响它周围或内部布局的属性时，屏幕的一部分要重画，但是元素的几何尺寸没有变。")]),v._v("(更换衣服就是重绘)")]),v._v(" "),t("li",[t("code",[v._v("reflow")]),v._v("(回流):当 "),t("code",[v._v("render tree")]),v._v(" 中的一部分或全部因为元素的规模尺寸、布局、隐藏等改变而需要重新构建.（我的理解改变站位面积就是回流）")])]),v._v(" "),t("h2",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[v._v("#")]),v._v(" 注意")]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("render")]),v._v(" 树的结构不等同于DOM树的结构，一些设置"),t("code",[v._v("display:none")]),v._v(" 的节点不会被放在 "),t("code",[v._v("render")]),v._v(" 树中，但会在dom树中。")])]),v._v(" "),t("li",[t("p",[v._v("有些情况，比如修改了元素的样式，浏览器并不会理科 "),t("code",[v._v("reflow")]),v._v(" 或"),t("code",[v._v("repaint")]),v._v("，而是把这些操作积攒一批，然后做一次 "),t("code",[v._v("reflow")]),v._v("，这也叫做异步 "),t("code",[v._v("reflow")]),v._v(" 或增量异步 "),t("code",[v._v("reflow")]),v._v("。.但在有些情况下，比如改变窗口，改变页面默认的字体等，对于这些情况，浏览器会马上进行 "),t("code",[v._v("reflow.")])])]),v._v(" "),t("li",[t("p",[v._v("为了更好的用户体验，渲染引擎将会尽可能早的将内容呈现到屏幕上，并不会等到所有的html都解析完成之后再去构建和布局 "),t("code",[v._v("render")]),v._v(" 树。它是解析完一部分内容就显示一部分内容，同时，可能还在通过网络下载其余内容。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("display:none")]),v._v(" 的节点不会被加入 "),t("code",[v._v("Render Tree")]),v._v("，而"),t("code",[v._v("visibility: hidden")]),v._v(" 则会，所以，如果某个节点最开始是不显示的，设为 "),t("code",[v._v("display:none")]),v._v(" 是更优的。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("display:none")]),v._v(" 会触发 "),t("code",[v._v("reflow")]),v._v("，而 "),t("code",[v._v("visibility:hidden")]),v._v(" 只会触发 "),t("code",[v._v("repaint")]),v._v("，因为没有发现位置变化。")])])]),v._v(" "),t("h2",{attrs:{id:"什么时候会发生回流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么时候会发生回流"}},[v._v("#")]),v._v(" 什么时候会发生回流")]),v._v(" "),t("ol",[t("li",[v._v("添加或者删除可见的 dom 元素")]),v._v(" "),t("li",[v._v("元素位置发生改变")]),v._v(" "),t("li",[v._v("元素尺寸改变——边距、填充、边框、宽度和高度")]),v._v(" "),t("li",[v._v("内容改变——比如文本改变或者图片大小改变而引起的计算值宽度和高度的改变;")]),v._v(" "),t("li",[v._v("页面渲染初始化")]),v._v(" "),t("li",[v._v("浏览器窗口的尺寸发生改变——resize 事件发生时候")])]),v._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("body"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("style"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\ns"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("padding "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"2px"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 回流+重绘")]),v._v("\ns"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("border "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"1px solid red"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 回流+重绘")]),v._v("\ns"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"blue"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("//重绘")]),v._v("\ns"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("backgroundColor "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"#ccc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 重绘")]),v._v("\ns"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("fontSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"14px"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("//回流+重绘")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 回流+重绘")]),v._v("\ndocument"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("body"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("appendChild")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("createTextNode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'abc!'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br")])]),t("p",[t("strong",[t("span",{staticStyle:{color:"red"}},[v._v("回流比重绘的消耗要大，回流的花销跟render tree有多少节点需要重新构建有关系，假设你直接操作body，比如在body最前面插入1个元素，会导致整个render tree回流，比起在body后面插入1个元素的代价当然要高很多。")])])]),v._v(" "),t("h2",{attrs:{id:"浏览器自身对-reflow-和-repaint-的优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器自身对-reflow-和-repaint-的优化"}},[v._v("#")]),v._v(" 浏览器自身对 reflow 和 repaint 的优化")]),v._v(" "),t("p",[v._v("如果说让每段 js 代码都去触发浏览器的回流和重绘的话,产生的代价是不容小觑，会造成浏览器的沉重负担，因此浏览器会对这个问题进行自身的优化：浏览器会维护一个队列，把所有会引起浏览器的回流和重绘的操作都会放入到这个队列中，等待队列中的操作到一定的数量之后或者是一定的时间周期的时候，浏览器就会进行一个批处理，这样就可以让多次的回流和重绘，在一次完成，提升性能。\n"),t("strong",[t("span",{staticStyle:{color:"red"}},[v._v("但是需要注意的是，JS 中有些属性或者方法会强制清空浏览器中的回流重绘等待队列")])])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("JS 中强制浏览器回流重绘的部分")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("clientWidth")]),v._v(" "),t("code",[v._v("clientHeight")]),v._v(" "),t("code",[v._v("clientTop")]),v._v(" "),t("code",[v._v("clientLeft")])]),v._v(" "),t("li",[t("code",[v._v("offsetWidth")]),v._v(" "),t("code",[v._v("offsetHeight")]),v._v(" "),t("code",[v._v("offsetTop")]),v._v(" "),t("code",[v._v("offsetLeft")])]),v._v(" "),t("li",[t("code",[v._v("scrollWidth")]),v._v(" "),t("code",[v._v("scrollHeight")]),v._v(" "),t("code",[v._v("scrollTop")]),v._v(" "),t("code",[v._v("scrollLeft")])]),v._v(" "),t("li",[t("code",[v._v("width")]),v._v(" "),t("code",[v._v("height")])]),v._v(" "),t("li",[t("code",[v._v("getComputedStyle()")])]),v._v(" "),t("li",[t("code",[v._v("getBoundingClientRect()")])])])]),v._v(" "),t("h2",{attrs:{id:"减少回流重绘的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减少回流重绘的方法"}},[v._v("#")]),v._v(" 减少回流重绘的方法")]),v._v(" "),t("h3",{attrs:{id:"css-部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-部分"}},[v._v("#")]),v._v(" css 部分")]),v._v(" "),t("ol",[t("li",[v._v("书写样式的时候，单个元素要按照 "),t("code",[v._v("定位属性")]),v._v("、"),t("code",[v._v("自身属性")]),v._v("、"),t("code",[v._v("文字样式")]),v._v("、"),t("code",[v._v("文本属性")]),v._v("、"),t("code",[v._v("CSS3新增")]),v._v(" 的顺序书写 CSS 样式。")]),v._v(" "),t("li",[v._v("避免使用 "),t("code",[v._v("table")]),v._v(" 布局")]),v._v(" "),t("li",[v._v("尽可能在 "),t("code",[v._v("DOM")]),v._v(" 树的最末端改变 "),t("code",[v._v("class")])]),v._v(" "),t("li",[v._v("避免设置多层内敛样式，将样式合并再一个外联样式")]),v._v(" "),t("li",[v._v("将需要多次回流的元素 "),t("code",[v._v("position")]),v._v(" 的属性设为 "),t("code",[v._v("absolute")]),v._v(" 绝对定位或者 "),t("code",[v._v("fixed")]),v._v(" (视窗定位)")]),v._v(" "),t("li",[v._v("避免使用 "),t("code",[v._v("css")]),v._v(" 的 "),t("code",[v._v("JavaScript")]),v._v(" 表达式")])]),v._v(" "),t("h3",{attrs:{id:"javascript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[v._v("#")]),v._v(" Javascript")]),v._v(" "),t("ol",[t("li",[v._v("避免直接操作 "),t("code",[v._v("DOM")]),v._v(" 创建一个文档片段或者是 "),t("code",[v._v("div")]),v._v(" ，在创建的文档片段或者 "),t("code",[v._v("div")]),v._v(" 上面应用所有的 "),t("code",[v._v("DOM")]),v._v(" 操作，最后再把它添加到 "),t("code",[v._v("window.document")]),v._v("。")]),v._v(" "),t("li",[v._v("在一个 "),t("code",[v._v("display:none")]),v._v(" 的元素上进行操作，最终把它显示出来。因为 "),t("code",[v._v("display:none;")]),v._v(" 元素上的 "),t("code",[v._v("DOM")]),v._v(" 操作不会引发回流和重绘")]),v._v(" "),t("li",[v._v("不要频繁的读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量存起来。")])]),v._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" left "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("offsetLeft"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\ntop "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("offsetTop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[v._v("避免频繁的操作样式，最好是一次性重写 "),t("code",[v._v("style")]),v._v(" 属性，或者将样式列表定义为 单独的一个 "),t("code",[v._v("class")]),v._v(" 并且一次性更改 "),t("code",[v._v("class")]),v._v(" 属性 "),t("code",[v._v('el.className="" //一次性更改')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);