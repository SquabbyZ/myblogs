(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{455:function(t,a,s){"use strict";s.r(a);var e=s(4),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"认识-canvas-元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认识-canvas-元素"}},[t._v("#")]),t._v(" 认识 Canvas 元素")]),t._v(" "),s("p",[s("code",[t._v("canvas")]),t._v(" 是 "),s("code",[t._v("HTML5")]),t._v(" 新增的专门用来绘制图形的元素，通过"),s("code",[t._v("canvas")]),t._v(" 技术，用户可以在 "),s("code",[t._v("Web")]),t._v(" 中绘制各种图形。 "),s("code",[t._v("canvas")]),t._v(" 元素它是一块无色透明的\n区域，它只是一个容器，开发者通过 "),s("code",[t._v("Javascript")]),t._v(" 脚本可以轻松的在区域上实现任意绘图")]),t._v(" "),s("h2",{attrs:{id:"在页面中天剑-canvas-元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在页面中天剑-canvas-元素"}},[t._v("#")]),t._v(" 在页面中天剑 canvas 元素")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("canvas")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myCanvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("578"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("200"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("您的浏览器不支持 canvas 元素，请您更新或更换您的浏览器\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("canvas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h2",{attrs:{id:"cavnvas-绘制步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cavnvas-绘制步骤"}},[t._v("#")]),t._v(" Cavnvas 绘制步骤")]),t._v(" "),s("ol",[s("li",[t._v("在 html5 页面中天剑 canvas 元素，定义 id 属性值以便接下来调用。"),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("canvas")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myCanvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("578"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("200"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("canvas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("使用 id 寻找页面中的 canvas 元素"),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myCanvas"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("通过 "),s("code",[t._v("canvas")]),t._v(" 元素的 "),s("code",[t._v("getContext")]),t._v(" 方法来获取其上下文 (Context)，即创建 "),s("code",[t._v("Context")]),t._v(" 对象，以获取允许进行绘制的 2D 环境"),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("使用 Javascript 脚本来进行绘制。"),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fillStyle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#FF0000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fillRect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])]),t._v(" "),s("h2",{attrs:{id:"canvas-绘制简单的图形"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#canvas-绘制简单的图形"}},[t._v("#")]),t._v(" Canvas 绘制简单的图形")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("绘制直线的相关方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("方法名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("阐述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("beginPath()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("定义了一个新的路径绘制动作的开始")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("moveTo()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("为指定点创建了一个新的子路径，这个点就变成了新的上下文点。我们可以把 moveTo() 方法看成用来定位我们的绘图鼠标用的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lineTo()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("以上下文为起点，到方法参数中指定的点之间话一条直线")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("stroke()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("为所画的线赋予颜色，并使其可见。如果没有特别的指定颜色的话，则默认使用黑色画直线")])])])])]),t._v(" "),s("li",[s("p",[t._v("绘制直线的相关属性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lineWidth")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("直线的宽度")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("strokeStyle")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("直线的颜色")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("直线端点样式")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("HTML5 canvas 支持3种直线的端点样式，包括:butt,round 和 square。 设定端点样式是用 LineCap 属性设定。缺省情况下，将使用 butt 样式")])])])])]),t._v(" "),s("li",[s("p",[t._v("绘制弧线和曲线")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("arcTo()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("arcTo() 方法在画布上创建介于两个切线之间的弧/曲线")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("quadraticCurveTo()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("绘制二次曲线，每条二次曲线要由上下文点，一个控制点和一个终止点来定义")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("bezierCurveTo()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("绘制贝塞尔曲线使用此方法，每条贝塞尔曲线需要由上下文点、两个控制点和一个终止点来确定，由于贝塞尔曲线有两个控制点，因此贝塞尔曲线可以比二次曲线更加的复杂多变")])])])])]),t._v(" "),s("li",[s("p",[t._v("线条的链接样式")])])]),t._v(" "),s("p",[s("code",[t._v("HTML5")]),t._v(" canvas 支持三种线条的连接样式，包括: miter ，round ，bevel。设定连接样式是用 lineJoin 属性设定的。缺省情况下，将使用 miter 样式\n"),s("strong",[t._v("注意:")]),t._v(" 如果线条比较细，它们之间的连接并不形成很尖锐的角度，name不同的连接样式之间可能会比较难以区分\n5. 绘制矩形\n绘制矩形使用 rect() 方法，每个矩形需要由左上角坐标(x,y) 和矩形的宽与高 (width,height) 来确定\n6. 绘制圆\n画圆只需要在调用 arc() 方法时，将起始角度设为 0，终止角度设为 2 * PI 即可")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绘制圆")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("context。beginPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//圆心坐标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" centerX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" centerY "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" radius "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//半径")]),t._v("\ncontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("centerX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("centerY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("radius"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false 为顺时针方向， true 为逆时针方向")]),t._v("\n\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("ol",{attrs:{start:"7"}},[s("li",[s("p",[t._v("图形的颜色填充\n要填充图形，需要用 fillStyle 属性设置填充 图形用的颜色，然后使用 fill() 方法完成对图形的填充。默认情况下， fillStyle 的颜色是黑色")])]),t._v(" "),s("li",[s("p",[t._v("绘制阴影\n要为图形添加阴影需要用到: shadowColor: 阴影颜色\nshadowBulr: 阴影模糊度\nshadowOffsetX: 设置或返回阴影与形状的水平距离\nshadowOffsetY: 设置或返回阴影与形状的垂直距离")])]),t._v(" "),s("li",[s("p",[t._v("绘制透明度\n"),s("code",[t._v("globalAlpha")]),t._v(" 属性设置或返回绘图的当前透明值。属性值必须是介于 0.0 (完全透明) 与 1.0 (不透明) 之间的数字。")])]),t._v(" "),s("li",[s("p",[t._v("绘制线性渐变\n首先使用 createLinearGradient() 方法创建 canvasGradient 对象，语法如下:\n"),s("code",[t._v("var grad = context.createLinearGradient(X1,Y1,X2,Y2)")]),t._v(" 其中 X1、Y1为渐变的起点，X2、Y2为渐变的终点。\n然后使用 "),s("code",[t._v("addColorStop")]),t._v(" 方法定义色标的位置并上色。\n"),s("code",[t._v("grad.addColor(position,color)")]),t._v("其中参数 position 为渐变中色标的相对位置(偏移量)")])]),t._v(" "),s("li",[s("p",[t._v("绘制径向渐变\n首先使用 "),s("code",[t._v("createRadialGradient()")]),t._v(" 方法创建 "),s("code",[t._v("canvasGradient")]),t._v(" 对象，语法如下:\n"),s("code",[t._v("var grad = context.createRadialGradient(X1,Y1,R1,X2,Y2,R2)")]),t._v("其中 X1,Y1,R1 定义一个以 (X1,Y1) 为原点、半径为 R1 的圆。X2、Y2、R2定义一个以 (X2,Y2)为原点、半径为 R2 的圆。\n然后使用 addColorStop 方法定义色标的位置并上色。\n"),s("code",[t._v("grad.addColor(position,color)")]),t._v("; 其中参数 position 为渐变中色标的相对位置(偏移量)")])]),t._v(" "),s("li",[s("p",[t._v("绘制图案填充\n用上下文对象的 createPattern() 方法创建一个图案填充对象，语法如下: "),s("code",[t._v("context.createPattern(image,type)")]),t._v("\n其中 type 必须为下面字符串之一: repeat 、repeat-x、repeat-y、no-repeat")])])]),t._v(" "),s("h2",{attrs:{id:"绘制图像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制图像"}},[t._v("#")]),t._v(" 绘制图像")]),t._v(" "),s("h3",{attrs:{id:"绘制图像的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制图像的方法"}},[t._v("#")]),t._v(" 绘制图像的方法")]),t._v(" "),s("ol",[s("li",[t._v("context.drawImage(ImageObj,x,y); "),s("code",[t._v("此方法需要一个图像对象和一个起始点坐标作为参数，其中起始点坐标是相对于 canvas 的左上角的位置")])]),t._v(" "),s("li",[t._v("context.drawImage(imageObj,x,y,width,height) "),s("code",[t._v("drawImage 方法还可以接受 width 和 height 两个参数来以任意指定的尺寸显示图像")])]),t._v(" "),s("li",[t._v("context.drawImage(imageObj,sx,sy,sw,sh,dx,dy,dw,dh) "),s("code",[t._v("drawImage 方法还可以增加另六个参数来实现对图像的裁剪。这六个参数是，sourceX,sourceY,sourceWidth,sourceHeight,destWidth 和 destHeight")]),t._v(" "),s("strong",[s("span",{staticStyle:{color:"red"}},[t._v("文本窃取方法")])])])]),t._v(" "),s("h2",{attrs:{id:"绘制文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制文本"}},[t._v("#")]),t._v(" 绘制文本")]),t._v(" "),s("h3",{attrs:{id:"绘制文本的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制文本的方法"}},[t._v("#")]),t._v(" 绘制文本的方法")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("context.fillText(Text,x1,y1);")]),t._v("其中 text 是要绘制的文本,x1,y1是绘制文本的位置")]),t._v(" "),s("li",[t._v("设置文本的字体、大小和样式，需要用到上下文对象的 font 属性。样式可以是 normal，italic 或 bold。默认情况是 normal")]),t._v(" "),s("li",[t._v("文本的颜色用 fillStyle 属性设置")]),t._v(" "),s("li",[t._v("描绘文本边缘"),s("code",[t._v("要描绘字体边缘的效果，要使用 strokeText() 方法替代 fillText(),同时要用 strokeStyle 属性代替 fillStyle 属性")])])]),t._v(" "),s("h3",{attrs:{id:"绘制文本对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制文本对齐"}},[t._v("#")]),t._v(" 绘制文本对齐")]),t._v(" "),s("p",[s("code",[t._v("文本的对齐功能设定使用 textAlign 属性。其可用的选项包括 start（文字排版从左到右左对齐，从右到左右对齐） ，end（和 start相反） ，left ， center 和 right。")])]),t._v(" "),s("h3",{attrs:{id:"文本度量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文本度量"}},[t._v("#")]),t._v(" 文本度量")]),t._v(" "),s("p",[s("code",[t._v("要获取有关文本的尺度信息，可用使用 measureText() 方法。此方法需要一个文本字符串组为参数，并返回一个尺度对象。尺度对象中的数据是基于所提供的字符串参数和当前的文本字体信息而来的。")])]),t._v(" "),s("h3",{attrs:{id:"文本换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文本换行"}},[t._v("#")]),t._v(" 文本换行")]),t._v(" "),s("p",[s("code",[t._v("要实现文本换行功能，我们需要创建一个用户自定义函数，此函数需要 canvas 上下文对象、一个文本字符串、一个位置、一个最大宽度和行高度信息。函数将使用 measureText（）计算何时换行")])]),t._v(" "),s("h2",{attrs:{id:"图形的变换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图形的变换"}},[t._v("#")]),t._v(" 图形的变换")]),t._v(" "),s("ol",[s("li",[t._v("移动坐标空间 "),s("code",[t._v("使用 translate() 方法可以将绘图原点横向和纵向的移动到指定的距离(x,y)，结果表现为整张图像的移动")])]),t._v(" "),s("li",[t._v("旋转坐标空间 "),s("code",[t._v("旋转 canvas 用的方法是 rotate() 此方法接受一个以弧度为单位的旋转参数，整个 canvas 将以坐标原点，也就是由 translate() 所确定的原点为圆心进行旋转")])]),t._v(" "),s("li",[t._v("缩放图形 "),s("code",[t._v("缩放操作使用 scale() 方法，参数 x,y 分别代表横向与纵向的缩放比例，两个参数都是浮点数，1.0 表示不缩放，小于1.0表示缩小，多钱啊与1.0表示放大")])]),t._v(" "),s("li",[t._v("保存与恢复 canvas 状态 "),s("code",[t._v("使用 save() 和 restore() 方法可以用实现对坐标变换状态的保存与恢复")])])]),t._v(" "),s("h3",{attrs:{id:"图形的组合与裁切"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图形的组合与裁切"}},[t._v("#")]),t._v(" 图形的组合与裁切")]),t._v(" "),s("ol",[s("li",[t._v("图形的组合 "),s("code",[t._v("globalCompositeOperation 属性设置或返回如何将一个源(新的)图像绘制到目标(已有的)的图像上")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("source-over")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("默认。在目标图像上显示源图像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("source-atop")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在目标图像顶部显示源图像。源图像位于目标图像之外的部分是不可见的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("source-in")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在目标图像中显示源图像。只有目标图像之内的源图像部分会显示，目标图像是透明的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("source-out")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在目标图像之外显示源图像。只有目标图像之外的源图像部分会显示，目标图像是透明的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("destination-over")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在源图像上显示目标图像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("destination-atop")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在源图像顶部显示目标图像。目标图像位于源图像之外的部分是不可见的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("destination-in")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在源图像中显示目标图像。只有源图像之内的目标图像部分会被显示，源图像是透明的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("destination-out")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在源图像之外显示目标图像。只有源图像之外的目标图像部分会被显示，源图像是透明的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lighter")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("显示源图像+目标图像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("copy")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("显示源图像。忽略目标图像")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("xor")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("使用异或操作对源图像与目标图像进行整合")])])])])])]),t._v(" "),s("h3",{attrs:{id:"图形的组合与裁切-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图形的组合与裁切-2"}},[t._v("#")]),t._v(" 图形的组合与裁切")]),t._v(" "),s("p",[t._v("clip() 方法从原始画布中剪切任意的形状和尺寸\n"),s("strong",[t._v("提示:")]),t._v(" 一旦剪切了某个区域，则所有之后的绘图都会被限制在被剪切的区域内(不能访问画布上的其他区域)。您也可以在使用 clip()方法前通过使用 save() 方法对当前画布区域进行保存，并在以后的任意时间对其进行恢复(通过 restore() 方法)")])])}),[],!1,null,null,null);a.default=n.exports}}]);