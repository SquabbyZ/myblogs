(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{496:function(s,t,a){"use strict";a.r(t);var e=a(3),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"具体的-jenkins-设置请参照下面的网站"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体的-jenkins-设置请参照下面的网站"}},[s._v("#")]),s._v(" 具体的 Jenkins 设置请参照下面的网站")]),s._v(" "),a("p",[a("a",{attrs:{href:"./jenkins+gitblit.md"}},[s._v("Jenkins + gitblit 实现 前端项目 git push 后触发 Jenkins 构建 并且用 express 运行前端项目(局域网)")])]),s._v(" "),a("h2",{attrs:{id:"项目的设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目的设置"}},[s._v("#")]),s._v(" 项目的设置")]),s._v(" "),a("ol",[a("li",[a("p",[s._v('我们需要将 "源码管理" 中的 '),a("code",[s._v("Git")]),s._v(" 改选为 "),a("code",[s._v("Subversion")]),s._v("\n然后在")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v(" Modules\n        Repository URL "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" http:localhost/svn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(" //这里填写 SVN 项目仓库地址\n        Credentials    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" xxx/***                  //这里填写 SVN 的项目能提交代码的账号密码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("只需把上面的两个填写就可以了，其余的默认就可以")])]),s._v(" "),a("li",[a("p",[s._v("构建触发器中 "),a("code",[s._v("Build whenever a SNAPSHOT dependency is built")]),s._v(" 还是要勾选上的，再把 "),a("code",[s._v("触发远程构建(例如，使用脚本)")]),s._v("勾选上，在"),a("span",{staticStyle:{color:"red"}},[s._v("身份验证令牌")]),s._v("的文本框内输入任意内容，但是一定要记住，因为后面要使用，因为我搭建的环境是局域网，所以就设为 "),a("code",[s._v("123456")]),s._v("，并且没有加密。")])])]),s._v(" "),a("p",[s._v("其余和 "),a("code",[s._v("Jenkis + Gitblit")]),s._v(" 的设置内容一样。")]),s._v(" "),a("h2",{attrs:{id:"svn-需要设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#svn-需要设置"}},[s._v("#")]),s._v(" SVN 需要设置")]),s._v(" "),a("p",[s._v("我采用的是 SVN 的 "),a("code",[s._v("post-commit hook")]),s._v(" ,来实现代码自动提交后，触发 Jenkins 的构建，因此我们需要找到 SVN 上你的项目库的目录的 "),a("code",[s._v("hook")]),s._v(" 文件夹，(我的地址是 "),a("code",[s._v("F:\\Repositories\\项目仓库名、hooks")]),s._v(")，在该文件夹下新建 "),a("code",[s._v("post-commit.bat")]),s._v(" 文件，(因为我 Jenkins 和 SVN 全部使用的是 Windows 系统)，文件内容如下")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("\njava "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("jar e"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Java")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("jdk"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("jenkins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("cli"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8200")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("job"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jenkins")]),s._v("仓库名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("build"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("token"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v("\n\nexit "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个不写会在提交完代码后，SVN报 `JAVA 不是内部或者外部命令`")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//这里的 `123456` 就是之前在 Jenkins 仓库里设置的 "构建触发器" 选项中的 身份验证令牌设置的时候所填写的内容。')]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("写完 bat 文件后，双击该文件，当你看到 Jenkis 服务网站上你的对应的 Jenkins project 开始构建就证明，我们写的 bat 脚本文件没有问题，"),a("strong",[s._v("注意该文件必须是 ASNI 编码 Windows 文件")])]),s._v(" "),a("p",[s._v("然后打开 visual SVN server 选择项目仓库鼠标右键弹出的菜单中选择 "),a("code",[s._v("properties")]),s._v(" 然后在弹出的对话框的最上面选择 "),a("code",[s._v("Hooks")]),s._v(",然后双击选择 "),a("code",[s._v("post-commit")]),s._v(",弹出的对话框会自动把你之前新建的 "),a("code",[s._v("post-commit.bat")]),s._v(" 文件的内容写入到上面，点击确定后 "),a("code",[s._v("post-commit")]),s._v(" 会很明显的加粗，然后一路确定即可。")]),s._v(" "),a("h2",{attrs:{id:"svn-和-jenkins-都配置好了，但是-svn-不执行脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#svn-和-jenkins-都配置好了，但是-svn-不执行脚本"}},[s._v("#")]),s._v(" SVN 和 Jenkins 都配置好了，但是 SVN 不执行脚本")]),s._v(" "),a("p",[s._v("原因是因为 visual SVN server 服务的用户不是系统本身的用户需要如下操作")]),s._v(" "),a("p",[s._v("右击我的电脑--管理--服务，找到 visualSVN serve ，右击选择属性---登陆--选择本地系统用户(允许与桌面交互)\n保存，重启 visualsvn 服务即可")])])}),[],!1,null,null,null);t.default=n.exports}}]);